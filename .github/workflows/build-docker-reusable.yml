name: Build Docker Image

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
      default-tag:
        required: true
        type: string
      cache-scope:
        required: true
        type: string
    secrets:
      gcp-sa-key:
        required: false
      gcp-project-id:
        required: false
      gar-registry:
        required: false

jobs:
  build-and-push:
    name: build-and-push-image
    runs-on: ubuntu-latest
    concurrency: build-${{ inputs.branch }}
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Google Auth for GAR
        if: github.event_name != 'pull_request'
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.gcp-sa-key }}
          project_id: ${{ secrets.gcp-project-id }}

      - name: Configure Docker for GAR
        if: github.event_name != 'pull_request'
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/nova
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=${{ inputs.default-tag }},enable={{is_default_branch}}

      - name: Build and push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ inputs.cache-scope }}
          cache-to: type=gha,mode=max,scope=${{ inputs.cache-scope }}
          provenance: false

      - name: Output image info
        if: github.event_name != 'pull_request'
        run: |
          echo "Built and pushed images:"
          echo "${{ steps.meta.outputs.tags }}"
          echo "Labels: ${{ steps.meta.outputs.labels }}"

      - name: Build and push to Google Artifact Registry
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            us-central1-docker.pkg.dev/da-frens/nova/nova:${{ inputs.default-tag }}
            us-central1-docker.pkg.dev/da-frens/nova/nova:${{ github.ref_name }}
          cache-from: type=gha,scope=${{ inputs.cache-scope }}
          cache-to: type=gha,mode=max,scope=${{ inputs.cache-scope }}
          provenance: false

      - name: Output GAR image info
        if: github.event_name != 'pull_request'
        run: |
          echo "Successfully built and pushed to Google Artifact Registry:"
          echo "Tags: us-central1-docker.pkg.dev/da-frens/nova/nova:${{ inputs.default-tag }}"
          echo "       us-central1-docker.pkg.dev/da-frens/nova/nova:${{ github.ref_name }}"

      - name: Update Cloud Run Service (nova)
        if: github.event_name != 'pull_request'
        run: |
          echo "Updating Cloud Run service 'nova'..."
          echo "Image: us-central1-docker.pkg.dev/da-frens/nova/nova:${{ inputs.default-tag }}"

          # Update the Cloud Run service with the new image
          gcloud run services update nova \
            --image us-central1-docker.pkg.dev/da-frens/nova/nova:${{ inputs.default-tag }} \
            --region us-central1 \
            --quiet

          echo "Cloud Run service 'nova' updated successfully!"
