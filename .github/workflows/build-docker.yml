name: CI

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: build-and-push-image
    runs-on: ubuntu-latest
    # Prevent overlapping builds on the same branch
    concurrency: build-${{ github.ref_name }}
    # Provide permissions to write to the Packages (for GHCR) and read repository contents
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Fetch full history in case you need it for certain build logic
          fetch-depth: 0

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /home/runner/.cache/buildx
          key: buildx-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            buildx-${{ github.ref_name }}-

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true  # Ensures buildx is the default builder

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          # Tag latest AND a tag tied to the SHA so you can reference images from a specific commit
          tags: |
            ghcr.io/${{ github.repository_owner }}/nova:main
            ghcr.io/${{ github.repository_owner }}/nova:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  delete-workflow-runs:
    # Ensure this only runs if build succeeded
    needs: [build-and-push]
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: read
    steps:
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 30
          keep_minimum_runs: 1

  create-sentry-release:
    # Ensure this only runs if build succeeded
    needs: [build-and-push]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: doubleangels
          SENTRY_PROJECT: nova
        with:
          environment: production
          ignore_missing: true
